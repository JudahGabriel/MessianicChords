@{
    ViewBag.Title = "Chords by artist";
}

<div style="text-align:center; margin: 50px;">
    <img data-bind="visible: isLoading" src="/Content/loading.gif" />
</div>
<div data-bind="foreach: chordsByArtist">
    <br />
    <span class="grouped-results-header" data-bind="text: Description"></span>
    <div class="search-results-container" data-bind="template: { name: 'search-results-template', foreach: Songs }">
        
    </div>
    <div style="clear: both;"></div>
    <br />
    <br />
</div>

<script type="text/javascript">

    $(function () {
        var viewModel = {
            chordsByArtist: ko.observableArray(),
            isLoading: ko.observable(true),
            skip: 0,
            take: 500,

            fetchSongsByArtist: function () {
                var args = {
                    skip: this.skip,
                    take: this.take
                };

                var self = this;
                $.getJSON("/Home/GetSongsByArtist", args, function (results) { self.songsFetched(results); });
            },

            songsFetched: function (results) {
                this.skip += results.Items.length;

                var self = this;
                results.Items.forEach(function(song) {
                    song.searchForArtist = function () { }

                    var artist = song.Artist;
                    var existingArtistGroup = self.chordsByArtist().filter(function (c) { return c.Artist === artist})[0];
                    if (existingArtistGroup) {
                        existingArtistGroup.Songs.push(song);
                    }
                    else {
                        var newArtistGroup = {
                            Artist: artist,
                            Songs: ko.observableArray([song])
                        };
                        newArtistGroup.Description = ko.computed(function () {
                            var totalSongs = newArtistGroup.Songs().length;
                            if (totalSongs > 1) {
                                return newArtistGroup.Artist + '  -  ' + totalSongs.toString() + ' songs';
                            }

                            return newArtistGroup.Artist;
                        });
                        self.chordsByArtist.push(newArtistGroup);
                    }
                });

                // If there are more available, fetch 'em.
                var areMoreSongsAvailable = this.skip < results.Total;
                viewModel.isLoading(areMoreSongsAvailable);
                if (areMoreSongsAvailable) {
                    this.fetchSongsByArtist();
                }
            }
        };

        ko.applyBindings(viewModel);
        viewModel.fetchSongsByArtist();
    });

</script>
